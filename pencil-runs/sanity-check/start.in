!                              -*-f90-*-     (for emacs)
&init_pars
!
! mesh Reynolds number Re_mesh= v*dx/nu = (tau*g/nu)*dx = (0.014 * 2.45/.0000138)*dx = 2485 * dx.
! We don't need to resolve Re_mesh < 1, since these flows will not be well represented by our value of nu
! Re_mesh > 1 -> dx > 0.000402 in code units
!
! So, with our given viscosity, we cannot accurately capture fluid velocity features on scales smaller than
! 0.000402 m = 402 micrometers, a bit more than twice the particle diameter of 165 micrometers.
!
! This information is useful for choosing the number of grid points (in cparam.local) in conjunction with
! the box size found here.
!
  cvsid='$Id$',
  xyz0  =    0.000,  -0.025,  -0.10
  xyz1  =    0.100,   0.025,   0.10
  lperi =      F,       F,      T
  lwrite_ic=T, lwrite_aux=T
  llocal_iso=T
  ip=14
!
!
! s   => dq/dx = 0
! a   =>  q    = 0
! a2  => dq/dx = const
! out => outflow
!
!        ux    uy   uz  rho  ss   shock  spot  gr   gphi  gz
  bcx =  'a',  'a', 's','a'
  bcy =  'a',  'a', 's','a'
!
/
&initial_condition_pars
!
! Locally isothermal -> local cs2 = global cs2 in EOS module; global cs2 must be set somewhere
! No other module appears to do this for a locally isothermal simulation, must be done here.
!
! To match the experiment (22 cm x 22 cm, friction time = 7 ms) need units of cm and 0.5 s. In
! m/s, sound speed of air at room temperature is 343 m/s = 17150 cm/(0.5 s)
!
  cs0=17150   ! see above
!
! Moved the particle position initialization to the initial condition module as well, for now.
! Could move some of the configurations which might be more generally useful back to particles
! modules later, maybs
!
!      0.0004
!
  initializexxp='equidistant-box'
  xb0= 0.0010
  yb0=-0.0245
  zb0= 0.0000
  Lbx= 0.0250
  Lby= 0.0490
  Lbz= 0.0000
  npx= 12
  npy= 24
  npz= 1
/
&hydro_init_pars
  inituu='zero'  ! no initial gas motion; this may change after the basic simulation
/
&density_init_pars
  initlnrho='const_rho'
  rho_const=1.0          ! experiment gas density = 0.15 kg/m^3
  ldensity_nolog=T
/
&eos_init_pars
  gamma=1.4
  ! locally isothermal; no need for rho0 here (set in density module)
  ! locally isothermal; no need for cs0 here (set based on global value, which is determined in InitialCondition module)
/
&grav_init_pars
  lgravx_gas=F,lgravy_gas=F,lgravz_gas=F  ! don't want any gravity on the gas, for now; although maybles i do??!?
/
&particles_init_pars
  initxxp='nothing'        ! will be handled specially by the InitialCondition module
  initvvp='constant'
  vpx0= 0.0
  vpy0= 0.0
  vpz0= 0.0
  bcpx='rmv',bcpy='rmv'    ! remove particles as they cross the y boudary; let them continue periodically across x boundary
  lcheck_exact_frontier=T
  lmigration_real_check=T
  lparticlemesh_tsc=T      ! interpolation scheme for moving particle quantities to the mesh and back
  !lparticlemesh_cic=T
  tausp=0.014              ! stopping time ; = stokes number in code units. St = 0.014, friction time = 0.007 s => code unit of time is 0.5 s
  rhopmat=390.0            ! material density ; from the initial dust to gas ratio given in the experiment, particle density = 390 * air density (may be assuming 60 rather than 75)
  eps_dtog=0.0             ! setting this to 0 forces the code to use the radius and material density to compute the mass of particles
  lignore_rhop_swarm=T
/
&particles_radius_init_pars
  initap="constant"
  ap0=8.25e-5
  lfixed_particles_radius=T
/
