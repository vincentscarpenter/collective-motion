!                           -*-f90-*-     (for Emacs)
!
!  Run parameters!
!
&run_pars
  cvsid='$Id$',
  nt=1000000000
  it1=100, dsnap=.014, dvid=0.00014, isave=1000, d2davg=0.014
  dtmin=1.0e-10
  itorder=3, cdt=0.4, cdtv=0.4
  lpencil_check=T
  tmax=2                         ! maximum simulation time, in code units ; (1 seconds with code units as 0.5 s ; about 200 friction times)
  max_walltime=85800             ! maximum wall clock time, in seconds    ; 23h50m
/
&eos_run_pars
/
&hydro_run_pars
/
&density_run_pars
  diffrho_hyper3_mesh=5, idiff='hyper3_mesh'
/
&grav_run_pars
/
&entropy_run_pars
/
&viscosity_run_pars
  nu_hyper3_mesh=5, ivisc='hyper3_mesh'
/
&particles_run_pars
!
! Drag force felt by particles, from gas.
!
  ldragforce_dust_par=T          ! dust particles will feel a drag force from the gas, getting a friction time based on tausp
  !ldraglaw_simple=T             ! draglaw sets how the friction time is calculated: simple -> friction time = tausp -> drag force = (u - v)/tausp
  ldraglaw_epstein=T             ! draglaw sets how the friction time is calculated: epstein drag -> same as simple, allows for scaling with Omega_K or fluid density
  !ldraglaw_variable=T           ! only one of variable or variable_density may be turned on with epstein drag; multiplies stopping time by Omega_K:     tausp -> tausp * r^(-1.5)
  ldraglaw_variable_density=T    ! only one of variable or variable_density may be turned on with epstein drag; multiplies stopping time by gas density: tausp -> tausp * gas_density
  ldiffuse_dragf=F               ! drag force diffusion

!
! Backreaction: drag force felt by gas from dust (Newtonian pair with drag force applied to particles from gas)
  !ldragforce_gas_par=T
!

!
! Gravity felt by particles: not handled in gravity_simple, which is capable of handling dust gravity only if the dust is modelled as a fluid
!
  gravx_profile='const'
  gravz_profile='zero'
  gravx=245                ! experiment gravitational acceleration = 9.8 m/s^2 = 0.00098 cm/ms^2 (as demanded to match experiment; see start.in)
  lcheck_exact_frontier=T
  lmigration_redo=T
/
